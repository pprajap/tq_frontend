# # Use the official Ubuntu 24.04 image as the base image
# FROM ubuntu:24.04

# # Avoid prompts from apt
# ENV DEBIAN_FRONTEND=noninteractive

# # Install necessary dependencies
# RUN apt-get update && apt-get install -y \
#     sudo \
#     build-essential \
#     git \
#     curl \
#     wget \
#     python3 \
#     python3-pip \
#     mesa-common-dev \
#     mesa-utils \
#     libvulkan-dev \
#     libxkbcommon-x11-0 \
#     libxkbcommon-dev \
#     software-properties-common \
#     libgl1-mesa-dev \
#     libxcb-xinerama0 \
#     libxcb-xinput0 \
#     libxcb-icccm4 \
#     libxcb-image0 \
#     libxcb-keysyms1 \
#     libxcb-randr0 \
#     libxcb-render-util0 \
#     libxcb-shape0 \
#     libxcb-sync1 \
#     libxcb-xfixes0 \
#     libxcb-xkb1 \
#     libxcb-cursor0 \
#     locales \
#     && apt-get update \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

# # Set locale to UTF-8
# RUN locale-gen en_US.UTF-8
# ENV LANG en_US.UTF-8
# ENV LANGUAGE en_US:en
# ENV LC_ALL en_US.UTF-8

# # Set the jwt token as environment variables for the Qt installer
# ARG QT_INSTALLER_JWT_TOKEN
# ENV QT_INSTALLER_JWT_TOKEN=$QT_INSTALLER_JWT_TOKEN

# # Download the Qt Online Installer
# RUN curl -L -o qt-installer.run "https://download.qt.io/official_releases/online_installers/qt-unified-linux-x64-online.run" && \
#     chmod +x qt-installer.run

# # Run the Qt installer in non-interactive mode
# RUN ./qt-installer.run \
#     --root /opt/Qt \
#     --accept-licenses \
#     --default-answer \
#     --accept-obligations \
#     --confirm-command \
#     install qt.qt6.680.linux_gcc_64

# # Set up environment variables
# ENV QT_PATH=/opt/Qt
# ENV QT_BASE_DIR=/opt/Qt/6.8.0/gcc_64
# ENV LD_LIBRARY_PATH=$QT_BASE_DIR/lib
# ENV QML2_IMPORT_PATH=$QT_BASE_DIR/qml
# ENV QT_PLUGIN_PATH=$QT_BASE_DIR/plugins
# ENV PATH=$PATH:$QT_BASE_DIR/bin:$QT_PATH/Tools/CMake/bin:$QT_PATH/Tools/Ninja

# base image
FROM pprajapa/qt680-gcc64:latest

# Set the working directory inside the container
WORKDIR /app

# Copy the project files into the container
COPY . /app

# Create the build directory, configure the project with CMake, and build it using Ninja
RUN mkdir build && cd build && cmake .. && cmake --build .

# Run the application
CMD ["./build/apptq_frontend"]
